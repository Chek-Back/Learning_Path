# Fundamentos Esenciales del Hacking Ético y Primeros Pasos Hacia la Evasión

Indice 

* Skills (Conocimientos y Habilidades a Adquirir)
En esta sección, desglosaré cada concepto fundamental, con ejemplos y analogías.

 1. Linux - El Alma del Hacking Ético
 2. Virtualización y Configuración de Laboratorio
 3. Kali Linux y Fundamentos de Hacking/Pentesting
 4. Sistema operativo: Jerarquía del sistema
 5. Bash Scripting (Básico)
 6. Herramnientas inciales
 7. Fundamentos de Redes (Networking)
 8. Conceptos Básicos de Seguridad de la Información
 9. Documntacion

* Targets (Retos y Mini-Metas)

 1. Configurar el Laboratorio de Virtualización
 2. Dominar los Fundamentos de Linux, empezar a moverme en el sistema
 3. Comprender los Fundamentos de Redes con TryHackMe
 4. Mis Primeros Pasos en Hack The Box (HTB)
 5. Mi Primer Script Bash Útil

* Goals (Metas Finales/Premios)

 1. Obtener la Certificación "Pre-Security" de TryHackMe
 2. Capacidad de Realizar y Analizar un Escaneo Básico de Red
 3. Demostrar Habilidad para Documentar Procesos de Pentesting Básicos

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
* Skill 1 (Linux)

Indice: 

 1. Linux - El Alma del Hacking Ético
 2. Diferentes Distribuciones de Linux: Los "Sabores" del Sistema Operativo:
 3. Terminal y Shell: Interfaz con el sistema
 4. Estructura del Sistema de Archivos (FHS): El Mapa del Tesoro: 
 5. Tipos de Usuarios y Permisos (chmod, chown): ¿Quién Manda Aquí y Quién no? 
 6. Procesos y Servicios
 7. Gestión de Software (APT y DPKG)
 8. Manejo de Archivos y Texto
 9. Automatización con Cron Jobs
 10. Logs del sistema y análisis

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

LINUX: 

Mi investigación me llevó a los inicios de los años 90. En ese momento, el mundo de los sistemas operativos era un poco diferente.
Por un lado,estaban los sistemas operativos comerciales, poderosos pero carísimos, como UNIX. Eran la elección para grandes empresas y universidades,
pero estaban fuera del alcance de la mayoría. Por otro, estaban los sistemas más accesibles, como MS-DOS, que eran populares en las computadoras personales, 
pero muy limitados en sus capacidades, especialmente para tareas complejas o para multiusuario/multitarea.

Ahí es donde entra un estudiante finlandés de informática llamado Linus Torvalds. En 1991, Linus no estaba del todo contento con el sistema UNIX-like que usaba en la universidad, llamado MINIX. 
MINIX era un sistema operativo pequeño, educativo y simple, creado por Andrew S. Tanenbaum. Era genial para aprender, pero Linus sentía que tenía muchas limitaciones y, lo que es más importante,
no era completamente abierto, lo que impedía la experimentación y la mejora libre.

Entonces, ¿qué hizo Linus? En lugar de quejarse, decidió "manos a la obra". ¡Me parece una mentalidad muy de hacker! Se propuso escribir su propio núcleo o "kernel" desde cero. 
Imagino que Linus pensó algo así: “Si lo que necesito no existe o no me dan la libertad para modificarlo, ¡pues lo construyo yo mismo!”

Este kernel, al que Linus inicialmente llamó "Freax" (una mezcla de "free", "freak" y "Unix"), pero que su administrador de servidor terminó llamando "Linux" (una combinación de Linus y Unix), 
fue liberado al público en agosto de 1991. Este fue un momento crucial.

Pero el verdadero "golpe maestro", el que cambió el juego y le dio a Linux su carácter único, fue la decisión de Linus de licenciar su kernel bajo la Licencia Pública General (GPL) de GNU. 
¿Por qué esto es tan importante y qué significa la GPL?

